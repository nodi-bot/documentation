{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IErrorCodeResponse": {
				"properties": {
					"errorKey": {
						"type": "string"
					},
					"errorMessage": {
						"type": "string"
					}
				},
				"required": [
					"errorKey",
					"errorMessage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SubscribeBody": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendInBlueSMTPEmailContact": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAltibusCancellationInformationBody": {
				"properties": {
					"reservationId": {
						"type": "string"
					},
					"reservationAmount": {
						"type": "number",
						"format": "double"
					},
					"cc": {
						"items": {
							"$ref": "#/components/schemas/SendInBlueSMTPEmailContact"
						},
						"type": "array"
					},
					"contactName": {
						"type": "string"
					},
					"contactEmail": {
						"type": "string"
					}
				},
				"required": [
					"reservationId",
					"reservationAmount",
					"contactName",
					"contactEmail"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICompanyStations": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"company_id": {
						"type": "number",
						"format": "double"
					},
					"original_id": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"station_name": {
						"type": "string"
					},
					"unique_name": {
						"type": "string"
					},
					"serviced": {
						"type": "boolean"
					},
					"geojson": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"company_id",
					"original_id",
					"latitude",
					"longitude",
					"station_name",
					"unique_name",
					"serviced",
					"geojson"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetSegmentProviderStopResponse": {
				"properties": {
					"segmentProviderStop": {
						"$ref": "#/components/schemas/ICompanyStations"
					}
				},
				"required": [
					"segmentProviderStop"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISegmentProviderStopIdPair": {
				"properties": {
					"origin": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"destination": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"required": [
					"origin",
					"destination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISegmentProviderStopServicesSchedules": {
				"properties": {
					"origin": {
						"type": "number",
						"format": "double"
					},
					"destination": {
						"type": "number",
						"format": "double"
					},
					"departureHour": {
						"type": "string"
					},
					"arrivalHour": {
						"type": "string"
					},
					"durationInSeconds": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"origin",
					"destination",
					"departureHour",
					"arrivalHour",
					"durationInSeconds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TClientPlace": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"city": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"station": {
						"type": "string"
					},
					"lat": {
						"type": "number",
						"format": "double"
					},
					"long": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"city",
					"country"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ETripTransport": {
				"enum": [
					"MULTIMODAL",
					"BUS",
					"TRAIN",
					"CARPOOLING"
				],
				"type": "string"
			},
			"EApiTransportType": {
				"enum": [
					"carpooling",
					"bus",
					"train"
				],
				"type": "string"
			},
			"ETicketStatusStatus": {
				"enum": [
					"LOCKED",
					"CANCELED",
					"BOOKED",
					"ERRORED"
				],
				"type": "string"
			},
			"IVoucherDetails": {
				"properties": {
					"voucher": {
						"type": "string"
					},
					"expireDateUTCUnix": {
						"type": "number",
						"format": "double"
					},
					"amountCents": {
						"type": "number",
						"format": "double"
					},
					"usableOn": {
						"type": "string"
					}
				},
				"required": [
					"voucher",
					"expireDateUTCUnix",
					"amountCents",
					"usableOn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IClientSegment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"company": {
						"type": "string"
					},
					"mean": {
						"$ref": "#/components/schemas/EApiTransportType"
					},
					"origin": {
						"$ref": "#/components/schemas/TClientPlace"
					},
					"destination": {
						"$ref": "#/components/schemas/TClientPlace"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"feeCents": {
						"type": "number",
						"format": "double"
					},
					"includedProviderFeeCents": {
						"type": "number",
						"format": "double"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"isBookable": {
						"type": "boolean"
					},
					"bookingStatus": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ETicketStatusStatus"
							},
							{
								"type": "boolean"
							}
						]
					},
					"redirectionLink": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"conditionsName": {
						"type": "string"
					},
					"fareName": {
						"type": "string"
					},
					"bookingClass": {
						"type": "string"
					},
					"vehicleIdentifier": {
						"type": "string"
					},
					"cancellationStatus": {
						"type": "string"
					},
					"voucherDetails": {
						"$ref": "#/components/schemas/IVoucherDetails"
					}
				},
				"required": [
					"id",
					"company",
					"mean",
					"origin",
					"destination",
					"priceCents",
					"feeCents",
					"includedProviderFeeCents",
					"departureUTC",
					"arrivalUTC",
					"originOffset",
					"destinationOffset",
					"durationMinutes",
					"isBookable",
					"redirectionLink"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IClientTrip": {
				"properties": {
					"id": {
						"type": "string"
					},
					"uuid": {
						"type": "string"
					},
					"origin": {
						"$ref": "#/components/schemas/TClientPlace"
					},
					"destination": {
						"$ref": "#/components/schemas/TClientPlace"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"feeCents": {
						"type": "number",
						"format": "double"
					},
					"paidPrice": {
						"type": "number",
						"format": "double"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"companies": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"mean": {
						"$ref": "#/components/schemas/ETripTransport"
					},
					"segments": {
						"items": {
							"$ref": "#/components/schemas/IClientSegment"
						},
						"type": "array"
					},
					"co2g": {
						"type": "number",
						"format": "double"
					},
					"vehicleIdentifier": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"origin",
					"destination",
					"priceCents",
					"feeCents",
					"paidPrice",
					"departureUTC",
					"arrivalUTC",
					"originOffset",
					"destinationOffset",
					"durationMinutes",
					"companies",
					"mean",
					"segments",
					"co2g"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EPassengerCategory": {
				"enum": [
					"youths",
					"seniors",
					"adults"
				],
				"type": "string"
			},
			"IDiscountCard": {
				"properties": {
					"id": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"cardCode": {
						"type": "string"
					},
					"visibility": {
						"type": "number",
						"format": "double"
					},
					"isIdRequired": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"label",
					"cardCode",
					"visibility",
					"isIdRequired"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EPassengerTitle": {
				"enum": [
					"MR",
					"MS",
					"MX"
				],
				"type": "string"
			},
			"ISerializedPassenger": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"category": {
						"$ref": "#/components/schemas/EPassengerCategory"
					},
					"discountCards": {
						"items": {
							"$ref": "#/components/schemas/IDiscountCard"
						},
						"type": "array"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"isCustomer": {
						"type": "boolean"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"discountCardId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"lastName",
					"firstName",
					"category",
					"discountCards",
					"title",
					"isCustomer",
					"birthdate",
					"age"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISerializedCustomer": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"mail",
					"lastName",
					"firstName",
					"title",
					"birthdate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISerializedCart": {
				"properties": {
					"id": {
						"type": "string"
					},
					"partnerId": {
						"type": "string"
					},
					"partnerExternalId": {
						"type": "string"
					},
					"paidPrice": {
						"type": "number",
						"format": "double",
						"description": "The paid price from the customer perspective. Matches the sum of the trips price with all the fees"
					},
					"rawPrice": {
						"type": "number",
						"format": "double",
						"description": "The actual price from Tictactrip's perspective. Matches the sum of the trips price without any fees."
					},
					"trips": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/ISerializedPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/ISerializedCustomer"
					}
				},
				"required": [
					"id",
					"paidPrice",
					"rawPrice",
					"trips"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICartPassenger": {
				"properties": {
					"category": {
						"type": "string"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"discountCards": {
						"items": {
							"properties": {
								"code": {
									"type": "string",
									"description": "The discount card number. Matches the `discountCardId` in TTT's DB"
								},
								"id": {
									"type": "string",
									"description": "Matches the TTT discount card ID's"
								}
							},
							"required": [
								"code",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"isCustomer": {
						"type": "boolean"
					}
				},
				"required": [
					"age"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICartCustomer": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"isSubscribedToNewsletter": {
						"type": "boolean"
					},
					"phoneNumber": {
						"type": "string"
					}
				},
				"required": [
					"mail",
					"firstName",
					"lastName",
					"title",
					"birthdate",
					"isSubscribedToNewsletter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateCartBody": {
				"properties": {
					"outboundTripId": {
						"type": "string"
					},
					"returnTripId": {
						"type": "string"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/ICartPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/ICartCustomer"
					},
					"partnerId": {
						"type": "string",
						"nullable": true
					},
					"partnerExternalId": {
						"type": "string",
						"nullable": true,
						"description": "Matches an id provided from a partner. It is used to keep track of the partner's orders and enables an order match between their system and our own"
					}
				},
				"required": [
					"outboundTripId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ICreateCartBody.customer-or-passengers_": {
				"properties": {
					"customer": {
						"$ref": "#/components/schemas/ICartCustomer"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/ICartPassenger"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"EOrderStatus": {
				"enum": [
					"CREATED",
					"SUCCESS",
					"CANCELED",
					"PENDING_BOOKING",
					"ERRORED",
					"REFUNDED"
				],
				"type": "string"
			},
			"TClientPassenger": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"category": {
						"$ref": "#/components/schemas/EPassengerCategory"
					},
					"discountCards": {
						"items": {
							"$ref": "#/components/schemas/IDiscountCard"
						},
						"type": "array"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"isCustomer": {
						"type": "boolean"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"discountCardId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"lastName",
					"firstName",
					"category",
					"discountCards",
					"title",
					"isCustomer",
					"birthDay",
					"birthMonth",
					"birthYear",
					"age"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TClientCustomer": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"mail",
					"lastName",
					"firstName",
					"title",
					"birthDay",
					"birthMonth",
					"birthYear"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EPaymentStatus": {
				"enum": [
					"ACCEPTED",
					"REFUSED",
					"CANCELLED",
					"ERROR",
					"INPROGRESS",
					"ONHOLD_PARTNER",
					"PENDING_RISK"
				],
				"type": "string"
			},
			"ISerializedOrder": {
				"properties": {
					"id": {
						"type": "string"
					},
					"orderDate": {
						"type": "string"
					},
					"cartId": {
						"type": "string"
					},
					"partnerId": {
						"type": "string"
					},
					"orderStatus": {
						"$ref": "#/components/schemas/EOrderStatus"
					},
					"trips": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					},
					"error": {
						"$ref": "#/components/schemas/IErrorCodeResponse"
					},
					"paymentStatus": {
						"$ref": "#/components/schemas/EPaymentStatus"
					}
				},
				"required": [
					"id",
					"orderDate",
					"orderStatus",
					"trips",
					"passengers",
					"customer",
					"paymentStatus"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderResponse": {
				"properties": {
					"order": {
						"$ref": "#/components/schemas/ISerializedOrder"
					},
					"priceCentsDiff": {
						"type": "number",
						"format": "double"
					},
					"isAvailable": {
						"type": "boolean"
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"paylineToken": {
						"type": "string"
					}
				},
				"required": [
					"order",
					"priceCentsDiff",
					"isAvailable",
					"expiresAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderPayload": {
				"properties": {
					"cartId": {
						"type": "string"
					}
				},
				"required": [
					"cartId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetCityFromUniqueNameResponse": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"countryCode": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"gpuid": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"specialType": {
						"type": "string"
					},
					"serviced": {
						"type": "boolean"
					},
					"notServicedSince": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"region",
					"country",
					"countryCode",
					"slug",
					"gpuid",
					"latitude",
					"longitude",
					"specialType",
					"serviced",
					"notServicedSince"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAuthOrderIdResponse": {
				"properties": {
					"token": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"token",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAuthOrderIdBody": {
				"properties": {
					"email": {
						"type": "string"
					},
					"orderId": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"orderId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreatePartnerAuthResponse": {
				"properties": {
					"token": {
						"type": "string"
					}
				},
				"required": [
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EAuthenticationRole.API_SEARCH_PARTNER": {
				"enum": [
					"searchPartner"
				],
				"type": "string"
			},
			"EAuthenticationRole.API_BOOK_PARTNER": {
				"enum": [
					"bookPartner"
				],
				"type": "string"
			},
			"ICreatePartnerAuthBody": {
				"properties": {
					"partnerId": {
						"type": "string"
					},
					"role": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EAuthenticationRole.API_SEARCH_PARTNER"
							},
							{
								"$ref": "#/components/schemas/EAuthenticationRole.API_BOOK_PARTNER"
							}
						]
					}
				},
				"required": [
					"partnerId",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITicketStatus": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"ticket": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"$ref": "#/components/schemas/ETicketStatusStatus"
					}
				},
				"required": [
					"id",
					"ticket",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEticket": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"ticket": {
						"type": "number",
						"format": "double"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"ticket",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBookableTicket": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"orderTicket": {
						"type": "number",
						"format": "double"
					},
					"data": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					},
					"providerSegmentBookingRefId": {
						"type": "string"
					},
					"ticketStatuses": {
						"items": {
							"$ref": "#/components/schemas/ITicketStatus"
						},
						"type": "array"
					},
					"eTicket": {
						"$ref": "#/components/schemas/IEticket"
					}
				},
				"required": [
					"id",
					"orderTicket",
					"data",
					"providerSegmentBookingRefId",
					"ticketStatuses",
					"eTicket"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateBookableTicketResponse": {
				"properties": {
					"bookableTicket": {
						"$ref": "#/components/schemas/IBookableTicket"
					}
				},
				"required": [
					"bookableTicket"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateBookableTicketBody": {
				"properties": {
					"orderTicketId": {
						"type": "number",
						"format": "double"
					},
					"data": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					},
					"ticketStatus": {
						"$ref": "#/components/schemas/ETicketStatusStatus"
					},
					"providerSegmentBookingRefId": {
						"type": "string"
					},
					"eTicketUrl": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"orderTicketId",
					"data",
					"ticketStatus",
					"providerSegmentBookingRefId",
					"eTicketUrl"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.Record_string.ICacheEntry__": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"MailType": {
				"type": "string",
				"enum": [
					"ABANDONED_1",
					"ABANDONED_2"
				]
			},
			"ICartNotification": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"cartId": {
						"type": "string"
					},
					"messageId": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"mailType": {
						"$ref": "#/components/schemas/MailType"
					},
					"templateId": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"id",
					"cartId",
					"messageId",
					"version",
					"mailType",
					"templateId",
					"createdAt",
					"updatedAt",
					"deletedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IClientCartNotification": {
				"properties": {
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"cart": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"totalPrice": {
						"type": "number",
						"format": "double"
					},
					"rawPrice": {
						"type": "number",
						"format": "double"
					},
					"paidPrice": {
						"type": "number",
						"format": "double"
					},
					"confirmedAt": {
						"type": "string",
						"format": "date-time"
					},
					"partnerExternalId": {
						"type": "string"
					},
					"partnerId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"cartNotifications": {
						"items": {
							"$ref": "#/components/schemas/ICartNotification"
						},
						"type": "array"
					}
				},
				"required": [
					"cart",
					"totalPrice",
					"rawPrice",
					"paidPrice",
					"confirmedAt",
					"id",
					"createdAt",
					"cartNotifications"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCartNotificationResponse": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"messageId": {
						"type": "string"
					},
					"cartId": {
						"type": "string"
					},
					"templateId": {
						"type": "number",
						"format": "double"
					},
					"version": {
						"type": "string"
					},
					"mailType": {
						"$ref": "#/components/schemas/MailType"
					}
				},
				"required": [
					"id",
					"messageId",
					"cartId",
					"templateId",
					"version",
					"mailType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCartNotificationBody": {
				"properties": {
					"messageId": {
						"type": "string"
					},
					"templateId": {
						"type": "number",
						"format": "double"
					},
					"version": {
						"type": "string"
					},
					"mailType": {
						"$ref": "#/components/schemas/MailType"
					}
				},
				"required": [
					"messageId",
					"templateId",
					"version",
					"mailType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TClientCart": {
				"properties": {
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"cart": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"totalPrice": {
						"type": "number",
						"format": "double"
					},
					"rawPrice": {
						"type": "number",
						"format": "double"
					},
					"paidPrice": {
						"type": "number",
						"format": "double"
					},
					"confirmedAt": {
						"type": "string",
						"format": "date-time"
					},
					"partnerExternalId": {
						"type": "string"
					},
					"partnerId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"cart",
					"totalPrice",
					"rawPrice",
					"paidPrice",
					"confirmedAt",
					"id"
				],
				"type": "object"
			},
			"GetCartResponse": {
				"properties": {
					"order": {
						"type": "string"
					}
				},
				"required": [
					"order"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCartResponse": {
				"properties": {
					"cartId": {
						"type": "string"
					},
					"priceCentsDiff": {
						"type": "number",
						"format": "double"
					},
					"isAvailable": {
						"type": "boolean"
					}
				},
				"required": [
					"cartId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateCartPassenger": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"type": "string"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"discountCards": {
						"items": {
							"$ref": "#/components/schemas/IDiscountCard"
						},
						"type": "array"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					},
					"isCustomer": {
						"type": "boolean"
					},
					"discountCardId": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ICreateCartCustomer": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					},
					"isSubscribedToNewsletter": {
						"type": "boolean"
					},
					"phoneNumber": {
						"type": "string"
					}
				},
				"required": [
					"mail",
					"firstName",
					"lastName",
					"title",
					"birthDay",
					"birthMonth",
					"birthYear",
					"isSubscribedToNewsletter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCartBody": {
				"properties": {
					"outboundTripId": {
						"type": "string"
					},
					"returnTripId": {
						"type": "string"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/ICreateCartPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/ICreateCartCustomer"
					},
					"partnerId": {
						"type": "string"
					},
					"partnerExternalId": {
						"type": "string",
						"description": "Matches an id provided from a partner. It is used to keep track of the partner's orders and enables an order match between their system and our own"
					}
				},
				"required": [
					"outboundTripId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPatchCartPassenger": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"type": "string"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"discountCards": {
						"items": {
							"$ref": "#/components/schemas/IDiscountCard"
						},
						"type": "array"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					},
					"isCustomer": {
						"type": "boolean"
					},
					"discountCardId": {
						"type": "string"
					}
				},
				"required": [
					"category",
					"age",
					"discountCards",
					"title",
					"firstName",
					"lastName",
					"birthDay",
					"birthMonth",
					"birthYear",
					"isCustomer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUpdateCartCustomerParams": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"birthDay": {
						"type": "number",
						"format": "double"
					},
					"birthMonth": {
						"type": "number",
						"format": "double"
					},
					"birthYear": {
						"type": "number",
						"format": "double"
					},
					"isSubscribedToNewsletter": {
						"type": "boolean"
					},
					"phoneNumber": {
						"type": "string"
					}
				},
				"required": [
					"mail",
					"firstName",
					"lastName",
					"title",
					"birthDay",
					"birthMonth",
					"birthYear",
					"isSubscribedToNewsletter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPatchCartBody": {
				"properties": {
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/IPatchCartPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/IUpdateCartCustomerParams"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IPopularCity": {
				"properties": {
					"unique_name": {
						"type": "string"
					},
					"city_id": {
						"type": "number",
						"format": "double"
					},
					"local_name": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"gpuid": {
						"type": "string"
					},
					"iscity": {
						"type": "boolean"
					},
					"popular": {
						"type": "boolean"
					},
					"nb_search": {
						"type": "string"
					}
				},
				"required": [
					"unique_name",
					"city_id",
					"local_name",
					"latitude",
					"longitude",
					"gpuid",
					"iscity",
					"popular",
					"nb_search"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESearchDirection": {
				"enum": [
					"from",
					"to"
				],
				"type": "string"
			},
			"ICompanies": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"coord_api": {
						"type": "boolean"
					},
					"direct_only": {
						"type": "boolean"
					},
					"has_city_api": {
						"type": "boolean"
					},
					"has_station_api": {
						"type": "boolean"
					},
					"implemented": {
						"type": "boolean"
					},
					"is_visible_on_search": {
						"type": "boolean"
					},
					"is_meta_company": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"perfect_data": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"coord_api",
					"direct_only",
					"has_city_api",
					"has_station_api",
					"implemented",
					"is_visible_on_search",
					"is_meta_company",
					"name",
					"perfect_data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IGetCustomerContextResponse": {
				"properties": {
					"mail": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"phoneNumber": {
						"type": "string"
					}
				},
				"required": [
					"mail",
					"title",
					"firstName",
					"lastName",
					"birthdate",
					"phoneNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TClientOrder": {
				"properties": {
					"paymentStatus": {
						"$ref": "#/components/schemas/EPaymentStatus"
					},
					"error": {
						"$ref": "#/components/schemas/IErrorCodeResponse"
					},
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"cart": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"partnerId": {
						"type": "string"
					},
					"totalPrice": {
						"type": "number",
						"format": "double"
					},
					"paidPrice": {
						"type": "number",
						"format": "double"
					},
					"rawPrice": {
						"type": "number",
						"format": "double"
					},
					"orderStatus": {
						"$ref": "#/components/schemas/EOrderStatus"
					},
					"cartId": {
						"type": "string"
					},
					"orderDate": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"paymentStatus",
					"customer",
					"passengers",
					"cart",
					"totalPrice",
					"paidPrice",
					"rawPrice",
					"orderStatus",
					"orderDate",
					"id"
				],
				"type": "object"
			},
			"ITripStats": {
				"properties": {
					"request": {
						"properties": {
							"to": {
								"type": "number",
								"format": "double"
							},
							"from": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"to",
							"from"
						],
						"type": "object"
					},
					"response": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"request",
					"response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatsStation": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatsCity": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"localname": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"stations": {
						"items": {
							"$ref": "#/components/schemas/IApiStatsStation"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"localname",
					"latitude",
					"longitude",
					"stations"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatsCompany": {
				"properties": {
					"fullname": {
						"type": "string"
					},
					"transportType": {
						"$ref": "#/components/schemas/EApiTransportType"
					}
				},
				"required": [
					"fullname",
					"transportType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatsTransportInformation": {
				"properties": {
					"historyData": {
						"type": "boolean"
					},
					"minNbSteps": {
						"type": "number",
						"format": "double",
						"description": "minimum number of segments for the origin-destination"
					},
					"nbPerDay": {
						"type": "number",
						"format": "double",
						"description": "number of trips per day in average"
					},
					"bestItinerary": {
						"properties": {
							"cities": {
								"items": {
									"type": "string"
								},
								"type": "array",
								"description": "array with the intermediate cities' full name"
							},
							"departureTsOfLast": {
								"type": "number",
								"format": "double",
								"description": "timestamp of the last departure expressed in minutes (08:00 => 8*60 => 480)"
							},
							"departureTsOfFirst": {
								"type": "number",
								"format": "double",
								"description": "timestamp of the first departure expressed in minutes (08:00 => 8*60 => 480)"
							},
							"stations": {
								"properties": {
									"destination": {
										"$ref": "#/components/schemas/IApiStatsStation"
									},
									"intermediateStations": {
										"items": {
											"$ref": "#/components/schemas/IApiStatsStation"
										},
										"type": "array"
									},
									"origin": {
										"$ref": "#/components/schemas/IApiStatsStation"
									}
								},
								"required": [
									"destination",
									"intermediateStations",
									"origin"
								],
								"type": "object"
							},
							"minNbSteps": {
								"type": "number",
								"format": "double"
							},
							"companies": {
								"items": {
									"$ref": "#/components/schemas/IApiStatsCompany"
								},
								"type": "array"
							},
							"duration": {
								"properties": {
									"mean": {
										"type": "number",
										"format": "double"
									},
									"max": {
										"type": "number",
										"format": "double"
									},
									"min": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"mean",
									"max",
									"min"
								],
								"type": "object"
							},
							"price": {
								"properties": {
									"mean": {
										"type": "number",
										"format": "double"
									},
									"max": {
										"type": "number",
										"format": "double"
									},
									"min": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"mean",
									"max",
									"min"
								],
								"type": "object"
							}
						},
						"required": [
							"cities",
							"departureTsOfLast",
							"departureTsOfFirst",
							"stations",
							"minNbSteps",
							"companies",
							"duration",
							"price"
						],
						"type": "object"
					}
				},
				"required": [
					"historyData",
					"minNbSteps",
					"nbPerDay",
					"bestItinerary"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatsTransportInformations": {
				"description": "When no stats are provided for a transport type, an empty object fills it",
				"properties": {
					"historyData": {
						"type": "boolean"
					},
					"train": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IApiStatsTransportInformation"
							},
							{
								"properties": {},
								"type": "object"
							}
						]
					},
					"bus": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IApiStatsTransportInformation"
							},
							{
								"properties": {},
								"type": "object"
							}
						]
					},
					"multimodality": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IApiStatsTransportInformation"
							},
							{
								"properties": {},
								"type": "object"
							}
						]
					},
					"carpooling": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IApiStatsTransportInformation"
							},
							{
								"properties": {},
								"type": "object"
							}
						]
					}
				},
				"required": [
					"historyData",
					"train",
					"bus",
					"multimodality",
					"carpooling"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatisticsTrip": {
				"properties": {
					"cities": {
						"properties": {
							"intermediateCities": {
								"items": {
									"$ref": "#/components/schemas/IApiStatsCity"
								},
								"type": "array"
							},
							"destination": {
								"$ref": "#/components/schemas/IApiStatsCity"
							},
							"origin": {
								"$ref": "#/components/schemas/IApiStatsCity"
							}
						},
						"required": [
							"intermediateCities",
							"destination",
							"origin"
						],
						"type": "object"
					},
					"companiesInvolved": {
						"items": {
							"$ref": "#/components/schemas/IApiStatsCompany"
						},
						"type": "array"
					},
					"transportInformation": {
						"$ref": "#/components/schemas/IApiStatsTransportInformations"
					},
					"distanceAsCrowFlies": {
						"type": "number",
						"format": "double"
					},
					"hasDirectTrip": {
						"type": "boolean"
					},
					"minNbSteps": {
						"type": "number",
						"format": "double"
					},
					"priceDurationGeneralInfo": {
						"properties": {
							"minDuration": {
								"type": "number",
								"format": "double",
								"description": "duration expressed in seconds"
							},
							"maxPrice": {
								"type": "number",
								"format": "double",
								"description": "price expressed in cents"
							},
							"minPrice": {
								"type": "number",
								"format": "double",
								"description": "price expressed in cents"
							}
						},
						"required": [
							"minDuration",
							"maxPrice",
							"minPrice"
						],
						"type": "object"
					}
				},
				"required": [
					"cities",
					"companiesInvolved",
					"transportInformation",
					"distanceAsCrowFlies",
					"hasDirectTrip",
					"minNbSteps",
					"priceDurationGeneralInfo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStatisticsWithSearchCount": {
				"properties": {
					"searchCount": {
						"type": "number",
						"format": "double"
					},
					"stats": {
						"$ref": "#/components/schemas/IApiStatisticsTrip"
					}
				},
				"required": [
					"searchCount",
					"stats"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiTripStatistics": {
				"properties": {
					"recentStats": {
						"$ref": "#/components/schemas/IApiStatisticsWithSearchCount"
					},
					"previousStats": {
						"$ref": "#/components/schemas/IApiStatisticsWithSearchCount"
					}
				},
				"required": [
					"recentStats",
					"previousStats"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISearchSegment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"company": {
						"type": "string"
					},
					"origin": {
						"properties": {
							"long": {
								"type": "number",
								"format": "double"
							},
							"lat": {
								"type": "number",
								"format": "double"
							},
							"station": {
								"type": "string"
							},
							"country": {
								"type": "string"
							},
							"city": {
								"type": "string"
							}
						},
						"required": [
							"long",
							"lat",
							"station",
							"city"
						],
						"type": "object"
					},
					"destination": {
						"properties": {
							"long": {
								"type": "number",
								"format": "double"
							},
							"lat": {
								"type": "number",
								"format": "double"
							},
							"station": {
								"type": "string"
							},
							"country": {
								"type": "string"
							},
							"city": {
								"type": "string"
							}
						},
						"required": [
							"long",
							"lat",
							"station",
							"city"
						],
						"type": "object"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"redirectionLink": {
						"type": "string"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"isBookable": {
						"type": "boolean"
					},
					"mean": {
						"type": "string"
					},
					"segmentProviderId": {
						"type": "number",
						"format": "double"
					},
					"vehicleIdentifier": {
						"type": "string"
					},
					"co2g": {
						"type": "number",
						"format": "double"
					},
					"bookingClass": {
						"type": "string"
					},
					"fareName": {
						"type": "string"
					},
					"conditionsName": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"company",
					"origin",
					"destination",
					"priceCents",
					"departureUTC",
					"arrivalUTC",
					"durationMinutes",
					"originOffset",
					"destinationOffset",
					"isBookable",
					"mean",
					"segmentProviderId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISearchTrip": {
				"properties": {
					"origin": {
						"properties": {
							"station": {
								"type": "string"
							},
							"country": {
								"type": "string"
							},
							"city": {
								"type": "string"
							}
						},
						"required": [
							"station",
							"city"
						],
						"type": "object"
					},
					"destination": {
						"properties": {
							"station": {
								"type": "string"
							},
							"country": {
								"type": "string"
							},
							"city": {
								"type": "string"
							}
						},
						"required": [
							"station",
							"city"
						],
						"type": "object"
					},
					"available": {
						"type": "boolean"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"mean": {
						"type": "string"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"companies": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"score": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"id": {
						"type": "string"
					},
					"isPartiallyBookable": {
						"type": "boolean"
					},
					"isFullyBookable": {
						"type": "boolean"
					},
					"transportType": {
						"type": "string"
					},
					"segments": {
						"items": {
							"$ref": "#/components/schemas/ISearchSegment"
						},
						"type": "array"
					},
					"co2g": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"origin",
					"destination",
					"available",
					"priceCents",
					"mean",
					"departureUTC",
					"arrivalUTC",
					"durationMinutes",
					"originOffset",
					"destinationOffset",
					"companies",
					"score",
					"id",
					"isPartiallyBookable",
					"isFullyBookable",
					"transportType",
					"segments",
					"co2g"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISearchResults": {
				"properties": {
					"trips": {
						"properties": {
							"multimodal": {
								"items": {
									"$ref": "#/components/schemas/ISearchTrip"
								},
								"type": "array"
							},
							"carpooling": {
								"items": {
									"$ref": "#/components/schemas/ISearchTrip"
								},
								"type": "array"
							},
							"train": {
								"items": {
									"$ref": "#/components/schemas/ISearchTrip"
								},
								"type": "array"
							},
							"bus": {
								"items": {
									"$ref": "#/components/schemas/ISearchTrip"
								},
								"type": "array"
							}
						},
						"required": [
							"multimodal",
							"carpooling",
							"train",
							"bus"
						],
						"type": "object"
					},
					"complete": {
						"type": "boolean"
					}
				},
				"required": [
					"trips",
					"complete"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEditableContent": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"state": {
						"type": "string"
					},
					"priority": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"content": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"required": [
					"id",
					"state",
					"priority",
					"date",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IEditableContent.Exclude_keyofIEditableContent.id-or-date__": {
				"properties": {
					"state": {
						"type": "string"
					},
					"priority": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"required": [
					"state",
					"priority",
					"content"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IEditableContent.id-or-date_": {
				"$ref": "#/components/schemas/Pick_IEditableContent.Exclude_keyofIEditableContent.id-or-date__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Partial_Omit_IEditableContent.id-or-state__": {
				"properties": {
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"priority": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IGeojsonCache": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"lat": {
						"type": "number",
						"format": "double"
					},
					"lon": {
						"type": "number",
						"format": "double"
					},
					"zoom": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"geojson": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"lat",
					"lon",
					"zoom",
					"date",
					"geojson",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateGpuidResponse": {
				"properties": {
					"name": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"countryCode": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"latitude",
					"longitude",
					"countryCode",
					"type",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateGpuidBody": {
				"properties": {
					"name": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"countryCode": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"latitude",
					"longitude",
					"countryCode",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRecordSearchResponse": {
				"properties": {
					"searchParts": {
						"properties": {
							"returnId": {
								"type": "number",
								"format": "double"
							},
							"outwardId": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"returnId",
							"outwardId"
						],
						"type": "object"
					},
					"searchId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"searchParts",
					"searchId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IValidationError": {
				"properties": {
					"errorKey": {
						"type": "string"
					},
					"errorMessage": {
						"type": "string"
					},
					"fields": {
						"properties": {},
						"additionalProperties": {
							"properties": {
								"message": {
									"type": "string"
								}
							},
							"required": [
								"message"
							],
							"type": "object"
						},
						"type": "object"
					}
				},
				"required": [
					"errorKey",
					"errorMessage",
					"fields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRecordSearchPlace": {
				"properties": {
					"city": {
						"type": "number",
						"format": "double"
					},
					"station": {
						"type": "number",
						"format": "double"
					},
					"isNearFrom": {
						"type": "boolean"
					}
				},
				"required": [
					"city",
					"isNearFrom"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserSearchBody": {
				"properties": {
					"origin": {
						"$ref": "#/components/schemas/IRecordSearchPlace"
					},
					"destination": {
						"$ref": "#/components/schemas/IRecordSearchPlace"
					},
					"departureDate": {
						"type": "string"
					},
					"returnDate": {
						"type": "string",
						"nullable": true
					},
					"isOneWay": {
						"type": "boolean"
					},
					"passengersNumber": {
						"type": "number",
						"format": "double"
					},
					"partnerId": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"origin",
					"destination",
					"departureDate",
					"returnDate",
					"isOneWay",
					"passengersNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderBody": {
				"properties": {
					"cartId": {
						"type": "string"
					}
				},
				"required": [
					"cartId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderBookSuccessResponse": {
				"properties": {
					"orderId": {
						"type": "string"
					}
				},
				"required": [
					"orderId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderBookBody": {
				"properties": {
					"orderId": {
						"type": "string"
					}
				},
				"required": [
					"orderId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"orderNotificationMailType": {
				"type": "string",
				"enum": [
					"NOTIFICATION_1"
				],
				"nullable": false
			},
			"IOrderNotification": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"orderId": {
						"type": "string"
					},
					"messageId": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"mailType": {
						"$ref": "#/components/schemas/orderNotificationMailType"
					},
					"templateId": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"id",
					"orderId",
					"messageId",
					"version",
					"mailType",
					"templateId",
					"createdAt",
					"updatedAt",
					"deletedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICreateOrderNotificationBody": {
				"properties": {
					"messageId": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"mailType": {
						"$ref": "#/components/schemas/orderNotificationMailType"
					},
					"templateId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"messageId",
					"version",
					"mailType",
					"templateId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IFormatedOrderCustomer": {
				"properties": {
					"email": {
						"type": "string"
					},
					"title": {
						"$ref": "#/components/schemas/EPassengerTitle"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"title",
					"firstName",
					"lastName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IGetOrder": {
				"properties": {
					"orderId": {
						"type": "string"
					},
					"customer": {
						"$ref": "#/components/schemas/IFormatedOrderCustomer"
					},
					"cart": {
						"properties": {
							"outboundTrip": {
								"properties": {
									"destination": {
										"properties": {
											"arrivalOffset": {
												"type": "string"
											},
											"arrivalUnixUtc": {
												"type": "number",
												"format": "double"
											},
											"city": {
												"type": "string"
											}
										},
										"required": [
											"arrivalOffset",
											"arrivalUnixUtc",
											"city"
										],
										"type": "object"
									},
									"origin": {
										"properties": {
											"departureOffset": {
												"type": "string"
											},
											"departureUnixUtc": {
												"type": "number",
												"format": "double"
											},
											"city": {
												"type": "string"
											}
										},
										"required": [
											"departureOffset",
											"departureUnixUtc",
											"city"
										],
										"type": "object"
									}
								},
								"required": [
									"destination",
									"origin"
								],
								"type": "object"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"orderNotifications": {
						"items": {
							"$ref": "#/components/schemas/IOrderNotification"
						},
						"type": "array"
					}
				},
				"required": [
					"orderId",
					"customer",
					"cart",
					"orderNotifications"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetOrderTicketResponse": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"originStopClusterGpuid": {
						"type": "string"
					},
					"destinationStopClusterGpuid": {
						"type": "string"
					},
					"originStopGroupGpuid": {
						"type": "string"
					},
					"destinationStopGroupGpuid": {
						"type": "string"
					},
					"departureUnixUtc": {
						"type": "number",
						"format": "double"
					},
					"departureOffset": {
						"type": "string"
					},
					"arrivalUnixUtc": {
						"type": "number",
						"format": "double"
					},
					"arrivalOffset": {
						"type": "string"
					},
					"brandId": {
						"type": "number",
						"format": "double"
					},
					"isBookable": {
						"type": "boolean"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"feeCents": {
						"type": "number",
						"format": "double"
					},
					"orderId": {
						"type": "string"
					},
					"orderCreatedAt": {
						"type": "string"
					},
					"lockData": {
						"type": "string"
					},
					"segmentProviderSegmentRefId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"originStopClusterGpuid",
					"destinationStopClusterGpuid",
					"originStopGroupGpuid",
					"destinationStopGroupGpuid",
					"departureUnixUtc",
					"departureOffset",
					"arrivalUnixUtc",
					"arrivalOffset",
					"brandId",
					"isBookable",
					"priceCents",
					"feeCents",
					"orderId",
					"orderCreatedAt",
					"lockData",
					"segmentProviderSegmentRefId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderTicket": {
				"additionalProperties": false,
				"type": "object",
				"description": "{@inheritDoc}"
			},
			"IUpdateOrderTicketBody": {
				"properties": {
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"lockData": {
						"type": "string"
					},
					"cancelledAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TCreateOrderTicketVirtualCard": {
				"properties": {
					"cvc": {
						"type": "string"
					},
					"expiryMonth": {
						"type": "string"
					},
					"expiryYear": {
						"type": "string"
					},
					"numbers": {
						"type": "string"
					}
				},
				"required": [
					"cvc",
					"expiryMonth",
					"expiryYear",
					"numbers"
				],
				"type": "object"
			},
			"BookableTicket": {
				"additionalProperties": false,
				"type": "object",
				"description": "{@inheritDoc}"
			},
			"TBookableTicketId": {
				"type": "string"
			},
			"IBookingCancellationConditions": {
				"properties": {
					"isCancellable": {
						"type": "boolean",
						"description": "Specifies whether the booking is cancellable or not"
					},
					"feeCents": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The fee in cents that applies to the cancellation and must be deducted from the price to calculate the refund value"
					},
					"cutoff": {
						"type": "string",
						"nullable": true,
						"description": "The date (deadline) in ISO 8601 format by which the booking can be cancelled for a cost of `feeCents`. e.g. 2021-06-15T06:05:00.000Z"
					},
					"bookingId": {
						"$ref": "#/components/schemas/TBookableTicketId",
						"description": "Booking id"
					},
					"isRefundedByVoucher": {
						"type": "boolean",
						"description": "Specifies whether the booking is reimbursed with coupons or not"
					}
				},
				"required": [
					"isCancellable",
					"feeCents",
					"bookingId",
					"isRefundedByVoucher"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderTicketCancellationStatus": {
				"additionalProperties": false,
				"type": "object",
				"description": "{@inheritDoc}"
			},
			"Partial_ICancellationStatusPayload_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"CREATED",
							"INPROGRESS",
							"ERRORED",
							"ACCEPTED"
						],
						"nullable": false
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IPartner": {
				"properties": {
					"id": {
						"type": "string"
					},
					"gpuids": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"placeholder": {
						"type": "string"
					},
					"header": {
						"type": "string"
					},
					"subHeader": {
						"type": "string"
					},
					"primaryColor": {
						"type": "string"
					},
					"secondaryColor": {
						"type": "string"
					},
					"backgroundUrl": {
						"type": "string"
					},
					"logoUrl": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISegmentResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"segmentProviderId": {
						"type": "number",
						"format": "double"
					},
					"brandName": {
						"type": "string"
					},
					"transportType": {
						"type": "string"
					},
					"originProviderStopId": {
						"type": "string"
					},
					"destinationProviderStopId": {
						"type": "string"
					},
					"departureUnixUtc": {
						"type": "number",
						"format": "double"
					},
					"arrivalUnixUtc": {
						"type": "number",
						"format": "double"
					},
					"departureOffset": {
						"type": "string"
					},
					"arrivalOffset": {
						"type": "string"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"segmentProviderBrandId": {
						"type": "string"
					},
					"redirectionLink": {
						"type": "string"
					},
					"segmentProviderSegmentRefId": {
						"type": "string"
					},
					"vehicleIdentifier": {
						"type": "string"
					},
					"co2g": {
						"type": "number",
						"format": "double"
					},
					"bookingClass": {
						"type": "string"
					},
					"fareName": {
						"type": "string"
					},
					"conditionsName": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"cacheDate": {
						"type": "string"
					},
					"isAvailable": {
						"type": "boolean"
					},
					"isBookable": {
						"type": "boolean"
					},
					"feeCents": {
						"type": "number",
						"format": "double"
					},
					"providerId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"segmentProviderId",
					"brandName",
					"transportType",
					"originProviderStopId",
					"destinationProviderStopId",
					"departureUnixUtc",
					"arrivalUnixUtc",
					"departureOffset",
					"arrivalOffset",
					"durationMinutes",
					"priceCents"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOdResponse": {
				"properties": {
					"originUic7": {
						"type": "string"
					},
					"destinationUic7": {
						"type": "string"
					},
					"originCity": {
						"type": "string"
					},
					"destinationCity": {
						"type": "string"
					},
					"originStationName": {
						"type": "string"
					},
					"destinationStationName": {
						"type": "string"
					},
					"originCityId": {
						"type": "string"
					},
					"destinationCityId": {
						"type": "string"
					},
					"segments": {
						"items": {
							"items": {
								"$ref": "#/components/schemas/ISegmentResponse"
							},
							"type": "array"
						},
						"type": "array"
					}
				},
				"required": [
					"originUic7",
					"destinationUic7",
					"segments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IGetStopGroupResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"transportTypes": {
						"items": {
							"$ref": "#/components/schemas/EApiTransportType"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"address",
					"city",
					"country",
					"latitude",
					"longitude",
					"name",
					"region",
					"transportTypes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStopGroup": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"city",
					"region",
					"country",
					"address",
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiStopCluster": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"city",
					"region",
					"country",
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiProvider": {
				"properties": {
					"name": {
						"type": "string"
					},
					"transportType": {
						"$ref": "#/components/schemas/EApiTransportType"
					}
				},
				"required": [
					"name",
					"transportType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ETripDirection": {
				"enum": [
					"outboundTrip",
					"returnTrip"
				],
				"type": "string"
			},
			"IApiSegment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"provider": {
						"$ref": "#/components/schemas/IApiProvider"
					},
					"origin": {
						"$ref": "#/components/schemas/IApiStopGroup"
					},
					"destination": {
						"$ref": "#/components/schemas/IApiStopGroup"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"transportType": {
						"$ref": "#/components/schemas/EApiTransportType"
					},
					"vehicleIdentifier": {
						"type": "string"
					},
					"co2g": {
						"type": "number",
						"format": "double"
					},
					"bookingClass": {
						"type": "string"
					},
					"fareName": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"provider",
					"origin",
					"destination",
					"priceCents",
					"departureUTC",
					"arrivalUTC",
					"originOffset",
					"destinationOffset",
					"durationMinutes",
					"transportType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiTrip": {
				"properties": {
					"id": {
						"type": "string"
					},
					"direction": {
						"$ref": "#/components/schemas/ETripDirection"
					},
					"origin": {
						"$ref": "#/components/schemas/IApiStopGroup"
					},
					"destination": {
						"$ref": "#/components/schemas/IApiStopGroup"
					},
					"available": {
						"type": "boolean"
					},
					"priceCents": {
						"type": "number",
						"format": "double"
					},
					"durationMinutes": {
						"type": "number",
						"format": "double"
					},
					"departureUTC": {
						"type": "number",
						"format": "double"
					},
					"arrivalUTC": {
						"type": "number",
						"format": "double"
					},
					"originOffset": {
						"type": "string"
					},
					"destinationOffset": {
						"type": "string"
					},
					"transportType": {
						"$ref": "#/components/schemas/ETripTransport"
					},
					"providers": {
						"items": {
							"$ref": "#/components/schemas/IApiProvider"
						},
						"type": "array"
					},
					"segments": {
						"items": {
							"$ref": "#/components/schemas/IApiSegment"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"direction",
					"origin",
					"destination",
					"available",
					"priceCents",
					"durationMinutes",
					"departureUTC",
					"arrivalUTC",
					"originOffset",
					"destinationOffset",
					"transportType",
					"providers",
					"segments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBundle": {
				"properties": {
					"trips": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"redirectionLink": {
						"type": "string"
					}
				},
				"required": [
					"trips",
					"redirectionLink"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiSearchResponse": {
				"properties": {
					"trips": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/IApiTrip"
						},
						"type": "object"
					},
					"bundles": {
						"items": {
							"$ref": "#/components/schemas/IBundle"
						},
						"type": "array"
					}
				},
				"required": [
					"trips",
					"bundles"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiInputPassenger": {
				"properties": {
					"age": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"age"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiGetResultsParams": {
				"properties": {
					"originGpuid": {
						"type": "string"
					},
					"destinationGpuid": {
						"type": "string"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/IApiInputPassenger"
						},
						"type": "array"
					},
					"outboundDate": {
						"type": "string"
					},
					"returnDate": {
						"type": "string"
					}
				},
				"required": [
					"originGpuid",
					"destinationGpuid",
					"passengers",
					"outboundDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TApiCart": {
				"properties": {
					"id": {
						"type": "string"
					},
					"cart": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					}
				},
				"required": [
					"id",
					"cart"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiConfirmedCart": {
				"properties": {
					"cartId": {
						"type": "string"
					},
					"priceCentsDiff": {
						"type": "number",
						"format": "double"
					},
					"isAvailable": {
						"type": "boolean"
					},
					"confirmedUntil": {
						"type": "string"
					}
				},
				"required": [
					"cartId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TApiOrder": {
				"properties": {
					"error": {
						"$ref": "#/components/schemas/IErrorCodeResponse"
					},
					"customer": {
						"$ref": "#/components/schemas/TClientCustomer"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/TClientPassenger"
						},
						"type": "array"
					},
					"cart": {
						"properties": {
							"returnTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							},
							"outboundTrip": {
								"$ref": "#/components/schemas/IClientTrip"
							}
						},
						"required": [
							"outboundTrip"
						],
						"type": "object"
					},
					"totalPrice": {
						"type": "number",
						"format": "double"
					},
					"orderStatus": {
						"$ref": "#/components/schemas/EOrderStatus"
					},
					"cartId": {
						"type": "string"
					},
					"orderDate": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"customer",
					"passengers",
					"cart",
					"totalPrice",
					"orderStatus",
					"orderDate",
					"id"
				],
				"type": "object"
			},
			"TApiCreatedOrder": {
				"properties": {
					"isAvailable": {
						"type": "boolean"
					},
					"priceCentsDiff": {
						"type": "number",
						"format": "double"
					},
					"order": {
						"$ref": "#/components/schemas/TApiOrder"
					}
				},
				"required": [
					"isAvailable",
					"priceCentsDiff",
					"order"
				],
				"type": "object"
			},
			"IApiPostOrderParams": {
				"properties": {
					"cartId": {
						"type": "string"
					}
				},
				"required": [
					"cartId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPassengerCategories": {
				"properties": {
					"name": {
						"type": "string"
					},
					"min_age": {
						"type": "number",
						"format": "double"
					},
					"max_age": {
						"type": "number",
						"format": "double"
					},
					"age_required": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"min_age",
					"max_age",
					"age_required"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaylineBuyer": {
				"properties": {
					"email": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"customerId": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"title",
					"lastName",
					"firstName",
					"customerId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Payment": {
				"additionalProperties": false,
				"type": "object",
				"description": "{@inheritDoc}"
			},
			"TApiStopGroupUrl": {
				"properties": {
					"id": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"transportTypes": {
						"items": {
							"$ref": "#/components/schemas/EApiTransportType"
						},
						"type": "array"
					},
					"pageId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"address",
					"city",
					"country",
					"latitude",
					"longitude",
					"name",
					"region",
					"transportTypes",
					"pageId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfApplicationPeriod": {
				"properties": {
					"begin": {
						"type": "string"
					},
					"end": {
						"type": "string"
					}
				},
				"required": [
					"begin",
					"end"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfImpactedStop": {
				"properties": {
					"amendedArrivalTime": {
						"type": "string"
					},
					"amendedDepartureTime": {
						"type": "string"
					},
					"baseDepartureTime": {
						"type": "string"
					},
					"baseArrivalTime": {
						"type": "string"
					},
					"isDetour": {
						"type": "boolean"
					},
					"cause": {
						"type": "string"
					},
					"arrivalStatus": {
						"type": "string"
					},
					"departureStatus": {
						"type": "string"
					},
					"stationName": {
						"type": "string"
					},
					"stopTimeEffect": {
						"type": "string"
					}
				},
				"required": [
					"amendedArrivalTime",
					"amendedDepartureTime",
					"baseDepartureTime",
					"baseArrivalTime",
					"isDetour",
					"cause",
					"arrivalStatus",
					"departureStatus",
					"stationName",
					"stopTimeEffect"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfImpactedObject": {
				"properties": {
					"impactedStops": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfImpactedStop"
						},
						"type": "array"
					},
					"ptObject": {
						"properties": {
							"tripName": {
								"type": "string"
							},
							"tripId": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"quality": {
								"type": "number",
								"format": "double"
							},
							"id": {
								"type": "string"
							},
							"embeddedType": {
								"type": "string"
							}
						},
						"required": [
							"tripName",
							"tripId",
							"name",
							"quality",
							"id",
							"embeddedType"
						],
						"type": "object"
					}
				},
				"required": [
					"impactedStops",
					"ptObject"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfDisruption": {
				"properties": {
					"status": {
						"type": "string"
					},
					"disruptionId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"effect": {
						"type": "string"
					},
					"impactId": {
						"type": "string"
					},
					"applicationPeriods": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfApplicationPeriod"
						},
						"type": "array"
					},
					"updatedAt": {
						"type": "string"
					},
					"impactedObjects": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfImpactedObject"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"disruptionId",
					"name",
					"effect",
					"impactId",
					"applicationPeriods",
					"updatedAt",
					"impactedObjects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfDisplayInformations": {
				"properties": {
					"direction": {
						"type": "string"
					},
					"network": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"physicalMode": {
						"type": "string"
					},
					"headsign": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"tripShortName": {
						"type": "string"
					},
					"commercialMode": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"arrivalDateTime": {
						"type": "string"
					},
					"departureDateTime": {
						"type": "string"
					},
					"baseArrivalDateTime": {
						"type": "string"
					},
					"baseDepartureDateTime": {
						"type": "string"
					},
					"dataFreshness": {
						"type": "string"
					}
				},
				"required": [
					"direction",
					"network",
					"name",
					"physicalMode",
					"headsign",
					"label",
					"tripShortName",
					"commercialMode",
					"description",
					"arrivalDateTime",
					"departureDateTime",
					"baseArrivalDateTime",
					"baseDepartureDateTime",
					"dataFreshness"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfServiceDepartureResponse": {
				"properties": {
					"disruptions": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfDisruption"
						},
						"type": "array"
					},
					"departures": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfDisplayInformations"
						},
						"type": "array"
					}
				},
				"required": [
					"disruptions",
					"departures"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOpenDataSncfServiceArrivalResponse": {
				"properties": {
					"disruptions": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfDisruption"
						},
						"type": "array"
					},
					"arrivals": {
						"items": {
							"$ref": "#/components/schemas/IOpenDataSncfDisplayInformations"
						},
						"type": "array"
					}
				},
				"required": [
					"disruptions",
					"arrivals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IStopGroupProviderData": {
				"properties": {
					"provider": {
						"type": "string"
					},
					"trainsPerDay": {
						"type": "number",
						"format": "double"
					},
					"firstDeparture": {
						"type": "string"
					},
					"lastDeparture": {
						"type": "string"
					},
					"firstArrival": {
						"type": "string"
					},
					"lastArrival": {
						"type": "string"
					}
				},
				"required": [
					"provider",
					"trainsPerDay",
					"firstDeparture",
					"lastDeparture",
					"firstArrival",
					"lastArrival"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICloseStopGroups": {
				"properties": {
					"newId": {
						"type": "string"
					},
					"uniqueName": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"newId",
					"uniqueName",
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IStopGroupsInformations": {
				"properties": {
					"name": {
						"type": "string"
					},
					"gpuid": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"journeysPerDay": {
						"type": "number",
						"format": "double"
					},
					"firstDeparture": {
						"type": "string"
					},
					"lastDeparture": {
						"type": "string"
					},
					"firstArrival": {
						"type": "string"
					},
					"lastArrival": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"servicedDestinations": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"stopGroupType": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"providersName": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"providers": {
						"items": {
							"$ref": "#/components/schemas/IStopGroupProviderData"
						},
						"type": "array"
					},
					"closeStopGroups": {
						"items": {
							"$ref": "#/components/schemas/ICloseStopGroups"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"gpuid",
					"address",
					"latitude",
					"longitude",
					"journeysPerDay",
					"city",
					"servicedDestinations",
					"stopGroupType",
					"providersName",
					"providers",
					"closeStopGroups"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IPartner_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"gpuids": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"placeholder": {
						"type": "string"
					},
					"header": {
						"type": "string"
					},
					"subHeader": {
						"type": "string"
					},
					"primaryColor": {
						"type": "string"
					},
					"secondaryColor": {
						"type": "string"
					},
					"backgroundUrl": {
						"type": "string"
					},
					"logoUrl": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {
			"authentication": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "@tictactrip/api",
		"version": "2.533.0",
		"description": "Tictactrip's API service",
		"license": {
			"name": "UNLICENSED"
		},
		"contact": {
			"name": "Tictactrip",
			"email": "dev@tictactrip.eu",
			"url": "https://www.tictactrip.eu"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/orderETickets/{orderId}/download/{filename}": {
			"get": {
				"operationId": "DownloadTicket",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					},
					"404": {
						"description": "If no order is found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "orderEtickets:client:orderNotFound",
											"errorMessage": "Order was not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Download an order Eticket and gives the name provided to the file.",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "8bc8557793fe4447"
					},
					{
						"in": "path",
						"name": "filename",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "myTicket"
					}
				]
			}
		},
		"/v2/stopGroups": {
			"get": {
				"operationId": "GetAllStopGroups",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IGetStopGroupResponse"
									},
									"type": "array"
								},
								"examples": {
									"Example 1": {
										"value": [
											{
												"id": "g|FRavignon_@spg3vp",
												"name": "Avignon Centre",
												"city": "Avignon",
												"region": "Provence-Alpes-Côte d’Azur",
												"country": "FR",
												"address": "1 rue du centre, 84000, Avignon",
												"latitude": 43.9408,
												"longitude": 4.79167,
												"transportTypes": [
													"bus",
													"train"
												]
											}
										]
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns the list of all StopGroups.",
				"security": [
					{
						"authentication": [
							"bookPartner",
							"searchPartner",
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/v2/stopGroups/{stopGroupGpuid}": {
			"get": {
				"operationId": "GetStopGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiStopGroup"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "g|FRavignon_@spg3vp",
											"name": "Avignon Centre",
											"city": "Avignon",
											"region": "Provence-Alpes-Côte d’Azur",
											"country": "FR",
											"address": "1 rue du centre, 84000, Avignon",
											"latitude": 43.9408,
											"longitude": 4.79167,
											"transportTypes": [
												"bus",
												"train"
											]
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "StopGroup not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "partnersApi:client:stopGroupNotFound",
											"errorMessage": "This StopGroup could not be found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns a StopGroup details.",
				"security": [
					{
						"authentication": [
							"bookPartner",
							"searchPartner",
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "stopGroupGpuid",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "g|FRavignon_@spg3vp"
					}
				]
			}
		},
		"/v2/stopClusters": {
			"get": {
				"operationId": "GetAllStopClusters",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IApiStopCluster"
									},
									"type": "array"
								},
								"examples": {
									"Example 1": {
										"value": [
											{
												"id": "c|FRangers__@gbrw5",
												"name": "Angers",
												"city": "Angers",
												"region": "Pays-de-la-Loire",
												"country": "FR",
												"latitude": 47.478419
											}
										]
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns the list of all StopClusters.",
				"security": [
					{
						"authentication": [
							"bookPartner",
							"searchPartner",
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/v2/stopClusters/{stopClusterGpuid}": {
			"get": {
				"operationId": "GetStopCluster",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiStopCluster"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "c|FRangers__@gbrw5",
											"name": "Angers",
											"city": "Angers",
											"region": "Pays-de-la-Loire",
											"country": "FR",
											"latitude": 47.478419
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "StopCluster not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "partnersApi:client:stopClusterNotFound",
											"errorMessage": "This StopCluster could not be found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns a StopCluster details.",
				"security": [
					{
						"authentication": [
							"bookPartner",
							"searchPartner",
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "stopClusterGpuid",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "c|FRangers__@gbrw5"
					}
				]
			}
		},
		"/v2/results": {
			"post": {
				"operationId": "GetResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiSearchResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"trips": {
												"67f077b4-3836-4616-ace2-42d68b0f4c71": {
													"id": "67f077b4-3836-4616-ace2-42d68b0f4c71",
													"direction": "outboundTrip",
													"origin": {
														"id": "g|FRavignon_@spg3vp",
														"name": "Avignon Centre",
														"city": "Avignon",
														"region": "Provence-Alpes-Côte d’Azur",
														"country": "FR",
														"address": "1 rue du centre, 84000, Avignon",
														"latitude": 43.9408,
														"longitude": 4.79167
													},
													"destination": {
														"id": "g|FRavignon_@spg3vp",
														"name": "Avignon Centre",
														"city": "Avignon",
														"region": "Provence-Alpes-Côte d’Azur",
														"country": "FR",
														"address": "1 rue du centre, 84000, Avignon",
														"latitude": 43.9408,
														"longitude": 4.79167
													},
													"available": true,
													"priceCents": 6000,
													"durationMinutes": 210,
													"departureUTC": 1619759072,
													"arrivalUTC": 1619773472,
													"originOffset": "+0200",
													"destinationOffset": "+0200",
													"transportType": "MULTIMODAL",
													"providers": [
														{
															"name": "Altibus",
															"transportType": "bus"
														},
														{
															"name": "TGV",
															"transportType": "train"
														}
													],
													"segments": [
														{
															"id": "0123456789",
															"provider": {
																"name": "Altibus",
																"transportType": "bus"
															},
															"origin": {
																"id": "g|FRavignon_@spg3vp",
																"name": "Avignon Centre",
																"city": "Avignon",
																"region": "Provence-Alpes-Côte d’Azur",
																"country": "FR",
																"address": "1 rue du centre, 84000, Avignon",
																"latitude": 43.9408,
																"longitude": 4.79167
															},
															"destination": {
																"id": "g|FRavignon_@spg3vp",
																"name": "Avignon Centre",
																"city": "Avignon",
																"region": "Provence-Alpes-Côte d’Azur",
																"country": "FR",
																"address": "1 rue du centre, 84000, Avignon",
																"latitude": 43.9408,
																"longitude": 4.79167
															},
															"priceCents": 2000,
															"durationMinutes": 120,
															"departureUTC": 1619759072,
															"arrivalUTC": 1619773472,
															"originOffset": "+0200",
															"destinationOffset": "+0200",
															"transportType": "bus"
														},
														{
															"id": "2345678901",
															"provider": {
																"name": "TGV",
																"transportType": "train"
															},
															"origin": {
																"id": "g|FRavignon_@spg3vp",
																"name": "Avignon Centre",
																"city": "Avignon",
																"region": "Provence-Alpes-Côte d’Azur",
																"country": "FR",
																"address": "1 rue du centre, 84000, Avignon",
																"latitude": 43.9408,
																"longitude": 4.79167
															},
															"destination": {
																"id": "g|FRavignon_@spg3vp",
																"name": "Avignon Centre",
																"city": "Avignon",
																"region": "Provence-Alpes-Côte d’Azur",
																"country": "FR",
																"address": "1 rue du centre, 84000, Avignon",
																"latitude": 43.9408,
																"longitude": 4.79167
															},
															"priceCents": 4000,
															"durationMinutes": 80,
															"departureUTC": 1619774072,
															"arrivalUTC": 1619778872,
															"originOffset": "+0200",
															"destinationOffset": "+0200",
															"transportType": "train",
															"vehicleIdentifier": "6319",
															"co2g": 50,
															"bookingClass": "2_ND_CLASS",
															"fareName": "PREM'S"
														}
													]
												}
											},
											"bundles": [
												{
													"trips": [
														"67f077b4-3836-4616-ace2-42d68b0f4c71"
													],
													"redirectionLink": "v2/redirect/?outboundTripId=67f077b4-3836-4616-ace2-42d68b0f4c71&partnerId=FR-WB-TEST"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "string",
											"errorMessage": "string"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "If the stopCluster is not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "partnersApi:client:stopClusterNotFound",
											"errorMessage": "This StopCluster could not be found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Fetch results. Ignore search request that are further than 1800KM.",
				"security": [
					{
						"authentication": [
							"admin",
							"searchPartner",
							"bookPartner"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IApiGetResultsParams"
							},
							"example": {
								"originGpuid": "c|FRavignon_@spg6j",
								"destinationGpuid": "c|FRmarseill@spey6",
								"passengers": [
									{
										"age": 22
									}
								],
								"outboundDate": "2021-04-28T00:00:00Z",
								"returnDate": "2021-04-28T00:00:00Z"
							}
						}
					}
				}
			}
		},
		"/booking/v3/carts/{cartId}": {
			"get": {
				"operationId": "GetCart",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"cart": {
											"$ref": "#/components/schemas/ISerializedCart"
										}
									},
									"required": [
										"cart"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"cart": {
												"id": "6771146ca0b7432b",
												"partnerId": null,
												"partnerExternalId": null,
												"paidPrice": 1420,
												"rawPrice": 1320,
												"trips": {
													"outboundTrip": {
														"id": "1165021",
														"uuid": "1f945779-4d9d-47ae-a711-c32bbcbf7639",
														"origin": {
															"id": 12709,
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"id": 549,
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"priceCents": 1420,
														"feeCents": 0,
														"paidPrice": 1420,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "1764084",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3819,
																	"long": 6.72121
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4852,
																	"long": 6.5291
																},
																"isBookable": true,
																"priceCents": 1420,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 1445751,
														"lastName": null,
														"firstName": null,
														"title": null,
														"isCustomer": false,
														"discountCardId": null,
														"category": "adults",
														"discountCards": [],
														"age": 30,
														"birthdate": null
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "If cart does not exist",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "carts:client:cartNotFound",
											"errorMessage": "Cart was not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get a cart by its id and its matching order if it exists.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "cartId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "6771146ca0b7432b"
					}
				]
			},
			"patch": {
				"operationId": "UpdateCart",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"isAvailable": {
											"type": "boolean"
										},
										"priceCentsDiff": {
											"type": "number",
											"format": "double"
										},
										"cart": {
											"$ref": "#/components/schemas/ISerializedCart"
										}
									},
									"required": [
										"isAvailable",
										"priceCentsDiff",
										"cart"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"cart": {
												"id": "6771146ca0b7432b",
												"partnerId": null,
												"partnerExternalId": null,
												"paidPrice": 1180,
												"rawPrice": 1080,
												"trips": {
													"outboundTrip": {
														"id": "1165021",
														"uuid": "1f945779-4d9d-47ae-a711-c32bbcbf7639",
														"origin": {
															"id": 12709,
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"id": 549,
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"priceCents": 1080,
														"feeCents": 0,
														"paidPrice": 1180,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "1764084",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3819,
																	"long": 6.72121
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4852,
																	"long": 6.5291
																},
																"isBookable": true,
																"priceCents": 1180,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 1445752,
														"lastName": "name",
														"firstName": "firstName",
														"title": "MR",
														"isCustomer": true,
														"discountCardId": null,
														"category": "adults",
														"discountCards": [],
														"age": 30,
														"birthdate": "1992-09-09T00:00:00.000Z"
													}
												],
												"customer": {
													"mail": "mail@mail.com",
													"title": "MR",
													"lastName": "lastName",
													"firstName": "firstName",
													"birthdate": "1992-09-09T00:00:00.000Z"
												}
											},
											"isAvailable": false
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "If cart does not exist",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "carts:client:cartNotFound",
											"errorMessage": "Cart was not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "\nUpdates a cart with the provided informations. A price lookup is done everytime a cart is patched.\nKeep in mind that patching a cart with an empty payload WILL NOT reset the cart's data, and will trigger a price lookup with the saved cart's data.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "cartId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Pick_ICreateCartBody.customer-or-passengers_"
							},
							"example": {
								"passengers": [
									{
										"lastName": "name",
										"discountCards": [],
										"isCustomer": true,
										"title": "MR",
										"firstName": "firstName",
										"category": "adults",
										"age": 25,
										"birthdate": "1992-09-09"
									}
								],
								"customer": {
									"lastName": "lastName",
									"mail": "mail@mail.com",
									"isSubscribedToNewsletter": false,
									"title": "MR",
									"firstName": "firstName",
									"birthdate": "1992-09-09"
								}
							}
						}
					}
				}
			}
		},
		"/booking/v3/carts": {
			"post": {
				"operationId": "CreateCart",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"cart": {
											"$ref": "#/components/schemas/ISerializedCart"
										}
									},
									"required": [
										"cart"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"cart": {
												"id": "6771146ca0b7432b",
												"partnerId": null,
												"partnerExternalId": null,
												"paidPrice": 1420,
												"rawPrice": 1320,
												"trips": {
													"outboundTrip": {
														"id": "1165021",
														"uuid": "1f945779-4d9d-47ae-a711-c32bbcbf7639",
														"origin": {
															"id": 12709,
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"id": 549,
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"priceCents": 1420,
														"feeCents": 0,
														"paidPrice": 1420,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "1764084",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3819,
																	"long": 6.72121
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4852,
																	"long": 6.5291
																},
																"isBookable": true,
																"priceCents": 1420,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 1445751,
														"lastName": null,
														"firstName": null,
														"title": null,
														"isCustomer": false,
														"discountCardId": null,
														"category": "adults",
														"discountCards": [],
														"age": 30,
														"birthdate": null
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "If trip does not exist or has expired",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "carts:client:tripExpired",
											"errorMessage": "The trip does not exist or has expired"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "If partner is not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "partnersApi:client:partnerNotFound",
											"errorMessage": "Partner was not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Creates a cart. Has to contain at least an outbound trip id and minimal passenger information for it to work.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICreateCartBody"
							},
							"example": {
								"outboundTripId": "1f945779-4d9d-47ae-a711-c32bbcbf7639",
								"passengers": [
									{
										"age": 30,
										"discountCards": []
									}
								]
							}
						}
					}
				}
			}
		},
		"/booking/v3/orders/{orderId}": {
			"get": {
				"operationId": "GetOrder",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"order": {
											"$ref": "#/components/schemas/ISerializedOrder"
										}
									},
									"required": [
										"order"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"order": {
												"id": "8bc8557793fe4447",
												"orderDate": "2022-09-09T15:30:02.896Z",
												"cartId": "6771146ca0b7432b",
												"orderStatus": "CREATED",
												"trips": {
													"outboundTrip": {
														"id": "309496",
														"origin": {
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"priceCents": 1180,
														"feeCents": 0,
														"paidPrice": 1180,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "406308",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3886,
																	"long": 6.7163
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4867,
																	"long": 6.5311
																},
																"priceCents": 1180,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"isBookable": true,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 349410,
														"title": "MR",
														"lastName": "name",
														"firstName": "firstName",
														"category": "adults",
														"discountCards": [],
														"isCustomer": true,
														"age": 30,
														"birthDay": 9,
														"birthMonth": 9,
														"birthYear": 1992,
														"discountCardId": null
													}
												],
												"customer": {
													"mail": "mail@mail.com",
													"title": "MR",
													"lastName": "name",
													"firstName": "firstName",
													"birthDay": 9,
													"birthMonth": 9,
													"birthYear": 1992
												},
												"paymentStatus": "ACCEPTED"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "If order does not exist",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "orders:client:orderNotFound",
											"errorMessage": "Order was not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Retrieves the order from the given cart ID.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "8bc8557793fe4447"
					}
				]
			}
		},
		"/booking/v3/orders": {
			"post": {
				"operationId": "CreateOrder",
				"responses": {
					"201": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ICreateOrderResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"order": {
												"id": "8bc8557793fe4447",
												"orderDate": "2022-09-09T13:24:15.533Z",
												"cartId": "6771146ca0b7432b",
												"orderStatus": "CREATED",
												"trips": {
													"outboundTrip": {
														"id": "309495",
														"origin": {
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"priceCents": 1180,
														"feeCents": 0,
														"paidPrice": 1180,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "406307",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3886,
																	"long": 6.7163
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4867,
																	"long": 6.5311
																},
																"priceCents": 1180,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"isBookable": true,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 349409,
														"title": "MR",
														"lastName": "name",
														"firstName": "firstName",
														"category": "adults",
														"discountCards": [],
														"isCustomer": true,
														"age": 30,
														"birthDay": 9,
														"birthMonth": 9,
														"birthYear": 1992,
														"discountCardId": null
													}
												],
												"customer": {
													"mail": "mail@mail.com",
													"title": "MR",
													"lastName": "name",
													"firstName": "firstName",
													"birthDay": 9,
													"birthMonth": 9,
													"birthYear": 1992
												},
												"paymentStatus": "ACCEPTED"
											},
											"priceCentsDiff": 0,
											"isAvailable": true,
											"expiresAt": "2022-09-09T13:39:15.533Z",
											"paylineToken": null
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "string",
											"errorMessage": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Creates an order. It uses the cart's information to build the order from it.\nThe cart must have been patched with customer information and at least one passenger.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICreateOrderPayload"
							},
							"example": {
								"cartId": "6771146ca0b7432b"
							}
						}
					}
				}
			}
		},
		"/booking/v3/discountCards": {
			"get": {
				"operationId": "GetDiscountCards",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IDiscountCard"
									},
									"type": "array"
								},
								"examples": {
									"Example 1": {
										"value": [
											{
												"id": "TTT_ADULT_PASS",
												"label": "Avantage Adulte",
												"visibility": 7,
												"cardCode": "WEEKEND_PASS",
												"isIdRequired": true
											},
											{
												"id": "TTT_VSC_YOUNG_PASS",
												"label": "Avantage Jeune",
												"visibility": 6,
												"cardCode": "YOUNG_PASS",
												"isIdRequired": true
											},
											{
												"id": "TTT_VSC_SENIOR_PASS",
												"label": "Avantage Senior",
												"visibility": 5,
												"cardCode": "SENIOR_PASS",
												"isIdRequired": true
											},
											{
												"id": "TTT_VSC_FAM30",
												"label": "Famille nombreuse 30%",
												"visibility": 4,
												"cardCode": "FAM30",
												"isIdRequired": false
											},
											{
												"id": "TTT_VSC_FAM40",
												"label": "Famille nombreuse 40%",
												"visibility": 3,
												"cardCode": "FAM40",
												"isIdRequired": false
											},
											{
												"id": "TTT_VSC_FAM50",
												"label": "Famille nombreuse 50%",
												"visibility": 2,
												"cardCode": "FAM50",
												"isIdRequired": false
											},
											{
												"id": "TTT_VSC_FAM75",
												"label": "Famille nombreuse 75%",
												"visibility": 1,
												"cardCode": "FAM75",
												"isIdRequired": false
											}
										]
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns all available discount cards.",
				"security": [],
				"parameters": []
			}
		},
		"/booking/v3/orders/{orderId}/book": {
			"post": {
				"operationId": "CreateBook",
				"responses": {
					"202": {
						"description": "Booking in progress",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"order": {
											"$ref": "#/components/schemas/ISerializedOrder"
										}
									},
									"required": [
										"order"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"order": {
												"id": "8bc8557793fe4447",
												"orderDate": "2022-09-09T15:30:02.896Z",
												"cartId": "6771146ca0b7432b",
												"orderStatus": "PENDING_BOOKING",
												"trips": {
													"outboundTrip": {
														"id": "309496",
														"origin": {
															"city": "Pralognan La Vanoise",
															"country": "France",
															"station": "PRALOGNAN LA VANOISE Airelles"
														},
														"destination": {
															"city": "Moûtiers",
															"country": "France",
															"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains"
														},
														"priceCents": 1180,
														"feeCents": 0,
														"paidPrice": 1180,
														"departureUTC": 1663561920,
														"arrivalUTC": 1663566300,
														"originOffset": "+0200",
														"destinationOffset": "+0200",
														"durationMinutes": 73,
														"companies": [
															"Altibus"
														],
														"segments": [
															{
																"id": "406308",
																"company": "Altibus",
																"mean": "bus",
																"origin": {
																	"city": "Pralognan La Vanoise",
																	"country": "France",
																	"station": "PRALOGNAN LA VANOISE Airelles",
																	"lat": 45.3886,
																	"long": 6.7163
																},
																"destination": {
																	"city": "Moûtiers",
																	"country": "France",
																	"station": "Moûtiers - Salins-les-Thermes - Brides-les-Bains",
																	"lat": 45.4867,
																	"long": 6.5311
																},
																"priceCents": 1180,
																"feeCents": 100,
																"includedProviderFeeCents": 120,
																"departureUTC": 1663561920,
																"arrivalUTC": 1663566300,
																"originOffset": "+0200",
																"destinationOffset": "+0200",
																"durationMinutes": 73,
																"isBookable": true,
																"redirectionLink": "/redirect?company=21&trip=MOG577&date=19/09/2022&env=production"
															}
														],
														"mean": "BUS",
														"co2g": 669
													}
												},
												"passengers": [
													{
														"id": 349410,
														"title": "MR",
														"lastName": "name",
														"firstName": "firstName",
														"category": "adults",
														"discountCards": [],
														"isCustomer": true,
														"age": 30,
														"birthDay": 9,
														"birthMonth": 9,
														"birthYear": 1992,
														"discountCardId": null
													}
												],
												"customer": {
													"mail": "mail@mail.com",
													"title": "MR",
													"lastName": "name",
													"firstName": "firstName",
													"birthDay": 9,
													"birthMonth": 9,
													"birthYear": 1992
												},
												"paymentStatus": "ACCEPTED"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "string",
											"errorMessage": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "If an unexpected error occurred",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IErrorCodeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"errorKey": "general:internal:unexpected",
											"errorMessage": "An unexpected error occurred"
										}
									}
								}
							}
						}
					}
				},
				"description": "Triggers an asynchronous booking process.",
				"security": [
					{
						"authentication": [
							"admin",
							"bookPartner"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "8bc8557793fe4447"
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}